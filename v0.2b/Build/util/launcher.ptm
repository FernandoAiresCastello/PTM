TITLE "PTM Launcher"
WINDOW 360, 200, 3, 1

PAL 0, c.black, &h101010
PAL 1, c.white, &hf0f0f0
PAL 2, c.file, &hf0f0f0
PAL 3, c.folder, &h808080
PAL 4, c.cursor, &hf01010
PAL 5, c.header_fg, &hf0f0f0
PAL 6, c.header_bg, &h3010d0

CHR 1, t.cursor, "0000100000001100111111101111111111111110000011000000100000000000"
CHR 2, t.solid, "1111111111111111111111111111111111111111111111111111111111111111"
CHR 3, t.back, "0000001000000010000100100011001001111110001100000001000000000000"

DEF root_path_indicator, "Back to root"

CALL init_keycodes
CALL enter_root_folder
CALL await_input

HALT

#================================================
	await_input:
#================================================
UPDATE
INKEY key
IF.EQ key, k_esc
	EXIT
ENDIF
IF.EQ key, k_down
	IF.LT selected_file_ix, last_file_ix
		INC cursor.y
		INC selected_file_ix
		CALL draw_cursor
	ENDIF
ENDIF
IF.EQ key, k_up
	IF.GT selected_file_ix, 0
		DEC cursor.y
		DEC selected_file_ix
		CALL draw_cursor
	ENDIF
ENDIF
IF.EQ key, k_enter
	IF.KEY "ALT"
		GOTO await_input
	ENDIF
	CALL select_file
ENDIF
IF.EQ key, k_backspace
	CALL enter_root_folder
ENDIF
GOTO await_input

#================================================
	select_file:
#================================================
VAR selected_file, files[selected_file_ix]
STR.SFX is_ptml, selected_file, ".ptm"
IF.TRUE is_ptml
	CALL launch_program
ENDIF
STR.SFX is_folder, selected_file, "/"
IF.TRUE is_folder
	CALL enter_sub_folder
ENDIF
IF.EQ selected_file, root_path_indicator
	CALL enter_root_folder
ENDIF
RET

#================================================
	launch_program:
#================================================
STR.CAT file_path, root, selected_file
RUN file_path
RET

#================================================
	enter_sub_folder:
#================================================
STR.CAT root, root, selected_file
CALL redraw_screen
CALL print_files
CALL reset_cursor
CALL draw_cursor
RET

#================================================
	enter_root_folder:
#================================================
VAR root, ""
CALL redraw_screen
CALL print_files
CALL reset_cursor
CALL draw_cursor
RET

#================================================
	reset_cursor:
#================================================
VAR cursor.x, 1
VAR cursor.y, 1
VAR selected_file_ix, 0
RET

#================================================
	redraw_screen:
#================================================
CLS
TILE.NEW t.solid, c.header_bg
VAR x, 0
FOR i, x, 45
	LOCATE x, 0
	PUT
	LOCATE x, 24
	PUT
	INC x
NEXT
LOCATE 1, 0
COLOR c.header_fg, c.header_bg
PRINT "PTM Launcher"
RET

#================================================
	draw_cursor:
#================================================
FOR y, 1, 23
	LOCATE cursor.x, y
	DEL
NEXT
TILE.NEW t.cursor, c.cursor
LOCATE cursor.x, cursor.y
PUT
RET

#================================================
	get_files:
#================================================
FILES all_files, root
ARR.LEN all_files, all_file_count
ARR.NEW files
IF.NEQ root, ""
	ARR.PUSH files, root_path_indicator
ENDIF
IF.GT all_file_count, 0
	ARR.FOR all_files, file
		STR.SFX is_ptml, file, ".ptm"
		IF.TRUE is_ptml
			ARR.PUSH files, file
		ENDIF
	NEXT
	ARR.FOR all_files, file
		STR.SFX is_folder, file, "/"
		IF.TRUE is_folder
			ARR.PUSH files, file
		ENDIF
	NEXT
ENDIF
ARR.LEN files, file_count
SUB last_file_ix, file_count, 1
RET

#================================================
	print_files:
#================================================
CALL get_files
COLOR c.white, c.black
LOCATE 2, 1
FOR i, 0, file_count
	VAR file, files[i]
	STR.SFX is_ptml, file, ".ptm"
	IF.TRUE is_ptml
		COLOR c.file, c.black
		PRINTF "{%file}\n"
	ENDIF
	STR.SFX is_folder, file, "/"
	IF.TRUE is_folder
		COLOR c.folder, c.black
		PRINTF "{%file}\n"
	ENDIF
	IF.EQ file, root_path_indicator
		COLOR c.folder, c.black
		PRINTF "{c%t.back} {%file}\n"
	ENDIF
NEXT
RET

#================================================
	key_test_loop:
#================================================
UPDATE
INKEY key
IF.NEQ key, 0
	CLS
	LOCATE 1, 1
	PRINT key
ENDIF
GOTO key_test_loop

#================================================
	init_keycodes:
#================================================
DEF k_right, 1073741903
DEF k_left, 1073741904
DEF k_up, 1073741906
DEF k_down, 1073741905
DEF k_enter, 13
DEF k_esc, 27
DEF k_space, 32
DEF k_del, 127
DEF k_pgup, 1073741899
DEF k_pgdn, 1073741902
DEF k_insert, 1073741897
DEF k_f1, 1073741882
DEF k_backspace, 8
RET
