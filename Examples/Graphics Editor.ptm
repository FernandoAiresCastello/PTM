
TITLE "Graphics Editor"

init:
	VAR main_bgc,15
	BGCOL main_bgc
	CALL charset.init
	CALL csr.init

main_loop:
	CALL csr.draw
	VSYNC
	CALL process_input
	GOTO main_loop

process_input:
	INKEY key
	IF.EQ key,"RIGHT"
		CALL csr.move_r
	ENDIF
	IF.EQ key,"LEFT"
		CALL csr.move_l
	ENDIF
	IF.EQ key,"UP"
		CALL csr.move_u
	ENDIF
	IF.EQ key,"DOWN"
		CALL csr.move_d
	ENDIF
	IF.KEY "SPACE"
		CALL put_current_tile
	ENDIF
	IF.KEY "DEL"
		CALL del_tile
	ENDIF
	RET

del_tile:
	LAYER 0
	LOCATE csr.x,csr.y
	DEL
	RET

put_current_tile:
	LAYER 0
	TILE.NEW 2,0,0
	LOCATE csr.x,csr.y
	TRON
	PUT
	RET

csr.init:
	VAR csr.fgc1,13
	VAR csr.fgc2,7
	VAR csr.x,22
	VAR csr.y,12
	RET

csr.draw:
	LAYER 1
	CLL
	TILE.NEW 1,csr.fgc1,0
	TILE.ADD 1,csr.fgc2,0
	LOCATE csr.x,csr.y
	TRON
	PUT
	RET

csr.move_r:
	IF.KEY "CTRL"
		ADD csr.x,csr.x,5
		RET
	ENDIF
	INC csr.x
	RET
csr.move_l:
	DEC csr.x
	RET
csr.move_d:
	INC csr.y
	RET
csr.move_u:
	DEC csr.y
	RET

charset.init:
	CHR 1,0,&b11111111
	CHR 1,1,&b10000001
	CHR 1,2,&b10000001
	CHR 1,3,&b10000001
	CHR 1,4,&b10000001
	CHR 1,5,&b10000001
	CHR 1,6,&b10000001
	CHR 1,7,&b11111111
	
	CHR 2,0,&b11111110
	CHR 2,1,&b11111110
	CHR 2,2,&b11111110
	CHR 2,3,&b11111110
	CHR 2,4,&b11111110
	CHR 2,5,&b11111110
	CHR 2,6,&b11111110
	CHR 2,7,&b00000000

	RET
